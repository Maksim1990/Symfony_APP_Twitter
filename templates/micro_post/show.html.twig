{% extends 'base.html.twig' %}

{% block body %}
    <small class="d-block text-right mt-3">
        <a href="{{ path('micro_post_index') }}">Home</a>
        <a href="{{ path('micro_post_edit',{'id':post.id}) }}">Edit</a>
        <a href="{{ path('micro_post_delete',{'id':post.id}) }}">Delete</a>
    </small>
    {{ include ('micro_post/raw-post.html.twig',{'post':post}) }}

    {% set isLiked=post.GetLikedBy.contains(app.user) %}
    <div class="pt-2">
        <button style="display: {% if not isLiked %}block {% else %}none {% endif %}" class="btn btn-outline-secondary btn-sm"
        id="like">Like
        <span class="badge badge-light" id="likes_badge">{{ post.getLikedBy|length }}</span>
        </button>

        <button style="display: {% if isLiked %}block {% else %}none {% endif %}" class="btn btn-outline-danger btn-sm"
                id="unlike">Unlike
            <span class="badge badge-light" id="unlikes_badge">{{  post.getLikedBy|length }}</span>
        </button>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}

    <script>
        var likeButton=document.getElementById('like');
        var unlikeButton=document.getElementById('unlike');

        AddOnClickAction(likeButton,unlikeButton, document.getElementById('unlikes_badge'),'{{ path('likes_like',{'id':post.id}) }}');

        AddOnClickAction(unlikeButton,likeButton, document.getElementById('likes_badge'),'{{ path('likes_unlike',{'id':post.id}) }}');

        function SwitchButtons(button, oppositeButton) {
            button.disabled=false;
            button.style.display='none';
            oppositeButton.style.display='block';
        }
        
        function AddOnClickAction(button, oppositeButton,likeCount, strPath) {
            button.addEventListener('click', function () {
                    button.disabled=true;
                    fetch(strPath,{'credentials':'include'}).then(function (resp) {
                        resp.json().then(function (json) {
                            likeCount.innerText=json.count;
                            SwitchButtons(button, oppositeButton);
                        })
                    }).catch(function () {
                        SwitchButtons(button, oppositeButton);
                    });

                    event.preventDefault();
            });
        }
    </script>
{% endblock %}
